import subprocess
import time

from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.common.exceptions import UnexpectedAlertPresentException, NoSuchElementException, JavascriptException, WebDriverException
from selenium.webdriver.chrome.service import Service
import threading
import urllib3
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By

import pyzbar.pyzbar as pyzbar
import ssl
from selenium.webdriver.common.alert import Alert
import csv
from slack_sdk import WebClient
from slack_sdk.errors import SlackApiError

def Worker123(self, startCourt, endCourt, usedDate, startTime, endTime, teamName, userCount, purpose, isWeek):
    ssl._create_default_https_context = ssl._create_unverified_context
    self.parent.setLog(str(startCourt) + '번 부터 ' + str(endCourt) + '까지 예약 시작')
    _driver = self.chromeDriver

    parent_window = _driver.current_window_handle

    if str(startCourt) != str(endCourt):
        for i in range(10000000000):
            courtNumberUp = int(startCourt)

            while courtNumberUp < int(endCourt) + 1:
                if courtNumberUp == 10 or courtNumberUp == 11 or courtNumberUp == 12:
                    courtNumberUp += 1
                    continue
                try:
                    if self.isStart:
                        url = 'https://www.ycs.or.kr/fmcs/4?facilities_type=L&base_date=' + str(
                            usedDate) + '&rent_type=1001&center=YCS04&part=02&place=' + str(courtNumberUp) + '#regist_list'
                        _driver.get(url)
                        checkboxIds = getCheckBoxIds(isWeek, courtNumberUp, int(startTime), int(endTime))

                        WebDriverWait(_driver, 10).until(
                            EC.presence_of_element_located((By.ID, "checkbox_time_0"))
                        )

                        checkScripts = [];
                        for j in checkboxIds:
                            checkScripts.append("document.getElementById('" + j + "').click();")

                        sCheckScripts = "\n".join(checkScripts)

                        # execute_script()를 사용하여 스크립트 실행
                        _driver.execute_script(sCheckScripts)

                        WebDriverWait(_driver, 10).until(
                            EC.presence_of_element_located((By.ID, "phone_chk"))
                        )

                        script = ("document.getElementById('phone_chk').click();")

                        _driver.execute_script(script)

                        all_windows = _driver.window_handles

                        if len([window for window in all_windows if window != parent_window]) == 0:
                            courtNumberUp += 1
                            continue

                        child_window = [window for window in all_windows if window != parent_window][0]

                        _driver.switch_to.window(child_window)

                        WebDriverWait(_driver, 10).until(
                            EC.presence_of_element_located((By.ID, "pattern_inactive"))
                        )

                        script = ("document.getElementById('pattern_inactive').click();")

                        _driver.execute_script(script)

                        # 핸들러를 사용하여 현재 띄어진 창으로 전환
                        _driver.switch_to.window(_driver.current_window_handle)

                        # 현재 띄어진 창에서 스크린샷을 찍기
                        _driver.save_screenshot("screenshot1.png")

                        # 원하는 태그만 자르기
                        from PIL import Image
                        dnjsqhsimage = Image.open("screenshot1.png")

                        decodedObjects = pyzbar.decode(dnjsqhsimage)

                        qrcodeData = ""
                        for obj in decodedObjects:
                            qrcodeData = obj.data.decode("utf-8").split(":")[1].strip()

                        try:
                            script = (f"document.getElementById('qr_number').value='{qrcodeData}';")
                            _driver.execute_script(script)

                            verificationButton = _driver.find_element(By.CSS_SELECTOR,
                                                                      '#container_qr > div.mt-2 > div.button_contents.mt-4 > div > div.col-3 > button')
                            verificationButton.click()

                            # 경고창을 띄웁니다.
                            # alert = _driver.switch_to.alert
                            WebDriverWait(_driver, 10).until(EC.alert_is_present())

                            # 경고창을 클릭합니다.
                            Alert(_driver).accept()  # 확인 버튼 클릭

                            _driver.switch_to.window(parent_window)

                            script = ("document.getElementsByClassName('action_application')[0].click();")

                            WebDriverWait(_driver, 10).until(
                                EC.presence_of_element_located((By.CLASS_NAME, "action_application"))
                            )

                            _driver.execute_script(script)

                            WebDriverWait(_driver, 10).until(EC.alert_is_present())

                            # 경고창을 클릭합니다.
                            Alert(_driver).accept()  # 확인 버튼 클릭

                            WebDriverWait(_driver, 10).until(
                                EC.presence_of_element_located((By.ID, "team_nm"))
                            )

                            time_datas = _driver.find_element(By.ID, 'time_datas')
                            time_datsValue = time_datas.get_attribute('value')

                            if len(time_datsValue.split('|')) == 1:
                                courtNumberUp += 1
                                continue

                            phoneNumberEle = _driver.find_element(By.ID, 'mobile_tel')

                            # phoneNum = phoneNumberEle.get_attribute("value").replace('-', '')
                            phoneNum = '01063327323'

                            script = (f"document.getElementById('team_nm').value='{teamName}';"
                                      f"document.getElementById('users').value={userCount};"
                                      "document.getElementById('tel').value = '';"
                                      f"document.getElementById('purpose').value = '{purpose}';"
                                      "document.getElementById('agree_use1').checked = true;")

                            self.chromeDriver.execute_script(script)

                            self.chromeDriver.implicitly_wait(5)

                            script = ("document.getElementsByClassName('button action_write')[0].click();")
                            _driver.execute_script(script)

                            alert = WebDriverWait(_driver, 10).until(EC.alert_is_present())

                            if alert.text != '인증이 완료되지 않았습니다. 인증 부탁드립니다.':
                                Alert(_driver).accept()  # 확인 버튼 클릭

                                script = ("document.getElementsByClassName('button action_write')[0].click();")
                                _driver.execute_script(script)

                                WebDriverWait(_driver, 10).until(EC.alert_is_present())
                                Alert(_driver).accept()  # 확인 버튼 클릭
                            else:
                                Alert(_driver).accept()  # 확인 버튼 클릭

                                script = ("document.getElementsByClassName('button action_edit')[0].click();")
                                self.chromeDriver.execute_script(script)

                                all_windows = _driver.window_handles

                                child_window = [window for window in all_windows if window != parent_window][0]

                                _driver.switch_to.window(child_window)

                                script = (
                                    "document.getElementsByClassName('white_content')[0].setAttribute('style', 'display:none;');"
                                    "document.getElementsByClassName('black_background')[0].setAttribute('style', 'display:none;');")

                                WebDriverWait(_driver, 10).until(
                                    EC.presence_of_element_located((By.ID, "message_inactive"))
                                )

                                _driver.execute_script(script)

                                script = ("document.getElementById('message_inactive').click();")

                                _driver.execute_script(script)

                                wait = WebDriverWait(_driver, 10)

                                script = (f"document.getElementById('phone_number').value='{phoneNum}';"
                                          "document.getElementsByClassName('btn btn-lg btn-secondary')[0].click()")

                                _driver.execute_script(script)

                                # 경고창을 클릭합니다.
                                WebDriverWait(_driver, 10).until(EC.alert_is_present())
                                Alert(_driver).accept()  # 확인 버튼 클릭

                                # 텍스트 상자에 길이가 5이고 숫자인 값이 입력 될 때까지 대기합니다.
                                textbox = wait.until(EC.element_to_be_clickable((By.ID, 'check_number')))
                                wait.until(
                                    lambda driver: len(textbox.get_attribute('value').strip()) == 6)

                                script = ("document.getElementsByClassName('btn btn-lg btn-success me-3')[0].click();")
                                _driver.execute_script(script)

                                alert2 = WebDriverWait(_driver, 10).until(EC.alert_is_present())

                                if alert2.text == '인증번호가 올바르지 않습니다':
                                    Alert(_driver).accept()  # 확인 버튼 클릭

                                    script = (f"document.getElementById('check_number').value='{''}';")
                                    _driver.execute_script(script)

                                    # 텍스트 상자에 길이가 5이고 숫자인 값이 입력 될 때까지 대기합니다.
                                    textbox = wait.until(EC.element_to_be_clickable((By.ID, 'check_number')))
                                    wait.until(
                                        lambda driver: len(
                                            textbox.get_attribute('value').strip()) == 6 and textbox.get_attribute(
                                            'value').strip().isdigit())

                                    script = (
                                        "document.getElementsByClassName('btn btn-lg btn-success me-3')[0].click();")
                                    _driver.execute_script(script)

                                    _driver.close()
                                    _driver.switch_to.window(parent_window)
                                else:
                                    Alert(_driver).accept()  # 확인 버튼 클릭

                                    _driver.switch_to.window(parent_window)

                                    script = ("document.getElementsByClassName('button action_write')[0].click();")
                                    _driver.execute_script(script)

                                    WebDriverWait(_driver, 10).until(EC.alert_is_present())
                                    Alert(_driver).accept()  # 확인 버튼 클릭
                            courtNumberUp += 1
                        except Exception as e:
                            print('1')
                            print(e)
                            _driver.switch_to.window(parent_window)
                            courtNumberUp += 1
                    else:
                        return
                except (
                        UnexpectedAlertPresentException, NoSuchElementException, JavascriptException, WebDriverException,
                        IndexError) as e:
                    courtNumberUp += 1
                    pass
    else:
        checkboxIds = getCheckBoxIds(isWeek, startCourt, int(startTime), int(endTime))

        checkScripts = [];
        for j in checkboxIds:
            checkScripts.append("document.getElementById('" + j + "').click();")

        sCheckScripts = "\n".join(checkScripts)

        url = 'https://www.ycs.or.kr/fmcs/4?facilities_type=L&base_date=' + str(
            usedDate) + '&rent_type=1001&center=YCS04&part=02&place=' + str(startCourt) + '#regist_list'

        for i in range(10000000000):
            try:
                if self.isStart:
                    _driver.get(url)

                    WebDriverWait(_driver, 10).until(
                        EC.presence_of_element_located((By.ID, "checkbox_time_0"))
                    )

                    # execute_script()를 사용하여 스크립트 실행
                    _driver.execute_script(sCheckScripts)

                    WebDriverWait(_driver, 10).until(
                        EC.presence_of_element_located((By.ID, "phone_chk"))
                    )

                    script = ("document.getElementById('phone_chk').click();")

                    _driver.execute_script(script)

                    all_windows = _driver.window_handles

                    if len([window for window in all_windows if window != parent_window]) == 0:
                        continue

                    child_window = [window for window in all_windows if window != parent_window][0]

                    _driver.switch_to.window(child_window)

                    WebDriverWait(_driver, 10).until(
                        EC.presence_of_element_located((By.ID, "pattern_inactive"))
                    )

                    script = ("document.getElementById('pattern_inactive').click();")

                    _driver.execute_script(script)

                    # 핸들러를 사용하여 현재 띄어진 창으로 전환
                    _driver.switch_to.window(_driver.current_window_handle)

                    # 현재 띄어진 창에서 스크린샷을 찍기
                    _driver.save_screenshot("screenshot1.png")

                    # 원하는 태그만 자르기
                    from PIL import Image
                    dnjsqhsimage = Image.open("screenshot1.png")

                    decodedObjects = pyzbar.decode(dnjsqhsimage)

                    qrcodeData = ""

                    for obj in decodedObjects:
                        qrcodeData = obj.data.decode("utf-8").split(":")[1].strip()

                    try:
                        script = (f"document.getElementById('qr_number').value='{qrcodeData}';")
                        _driver.execute_script(script)

                        verificationButton = _driver.find_element(By.CSS_SELECTOR, '#container_qr > div.mt-2 > div.button_contents.mt-4 > div > div.col-3 > button')
                        verificationButton.click()

                        # 경고창을 띄웁니다.
                        # alert = _driver.switch_to.alert
                        WebDriverWait(_driver, 10).until(EC.alert_is_present())

                        # 경고창을 클릭합니다.
                        Alert(_driver).accept()  # 확인 버튼 클릭

                        _driver.switch_to.window(parent_window)

                        WebDriverWait(_driver, 10).until(
                            EC.presence_of_element_located((By.CLASS_NAME, "action_application"))
                        )

                        script = ("document.getElementsByClassName('action_application')[0].click();")

                        _driver.execute_script(script)

                        WebDriverWait(_driver, 10).until(EC.alert_is_present())

                        # 경고창을 클릭합니다.
                        Alert(_driver).accept()  # 확인 버튼 클릭

                        WebDriverWait(_driver, 10).until(
                            EC.presence_of_element_located((By.ID, "team_nm"))
                        )

                        time_datas = _driver.find_element(By.ID, 'time_datas')
                        time_datsValue = time_datas.get_attribute('value')

                        if len(time_datsValue.split('|')) == 1:
                            continue

                        phoneNumberEle = _driver.find_element(By.ID, 'mobile_tel')

                        # phoneNum = phoneNumberEle.get_attribute("value").replace('-', '')
                        phoneNum = '01063327323'

                        script = (f"document.getElementById('team_nm').value='{teamName}';"
                                  f"document.getElementById('users').value={userCount};"
                                  "document.getElementById('tel').value = '';"
                                  f"document.getElementById('purpose').value = '{purpose}';"
                                  "document.getElementById('agree_use1').checked = true;")

                        self.chromeDriver.execute_script(script)

                        self.chromeDriver.implicitly_wait(5)

                        script = ("document.getElementsByClassName('button action_write')[0].click();")
                        _driver.execute_script(script)

                        alert = WebDriverWait(_driver, 10).until(EC.alert_is_present())

                        if alert.text != '인증이 완료되지 않았습니다. 인증 부탁드립니다.':
                            Alert(_driver).accept()  # 확인 버튼 클릭

                            script = ("document.getElementsByClassName('button action_write')[0].click();")
                            _driver.execute_script(script)

                            WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            Alert(_driver).accept()  # 확인 버튼 클릭
                        else:
                            Alert(_driver).accept()  # 확인 버튼 클릭

                            script = ("document.getElementsByClassName('button action_edit')[0].click();")
                            self.chromeDriver.execute_script(script)

                            all_windows = _driver.window_handles

                            child_window = [window for window in all_windows if window != parent_window][0]

                            _driver.switch_to.window(child_window)

                            script = ("document.getElementsByClassName('white_content')[0].setAttribute('style', 'display:none;');"
                                      "document.getElementsByClassName('black_background')[0].setAttribute('style', 'display:none;');")

                            WebDriverWait(_driver, 10).until(
                                EC.presence_of_element_located((By.ID, "message_inactive"))
                            )

                            _driver.execute_script(script)

                            script = ("document.getElementById('message_inactive').click();")

                            _driver.execute_script(script)

                            wait = WebDriverWait(_driver, 10)
                            # loadingBar = wait.until(EC.element_to_be_clickable((By.CLASS_NAME, 'white_content')))

                            # script = ("document.getElementsByClassName('btn btn-lg btn-secondary')[0].click()")

                            script = (f"document.getElementById('phone_number').value='{phoneNum}';"
                                      "document.getElementsByClassName('btn btn-lg btn-secondary')[0].click()")

                            _driver.execute_script(script)

                            # 경고창을 클릭합니다.
                            WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            Alert(_driver).accept()  # 확인 버튼 클릭

                            startTime = time.time()
                            smsVerificationResult = checkVerificationCode(_driver)
                            endTime3 = time.time()

                            print(smsVerificationResult)

                            print("걸린 시간 : " + f"{endTime3 - startTime:.5f} sec")

                            return

                            # # 텍스트 상자에 길이가 5이고 숫자인 값이 입력 될 때까지 대기합니다.
                            # textbox = wait.until(EC.element_to_be_clickable((By.ID, 'check_number')))
                            # wait.until(
                            #     lambda driver: len(textbox.get_attribute('value').strip()) == 6)
                            #
                            # script = ("document.getElementsByClassName('btn btn-lg btn-success me-3')[0].click();")
                            # _driver.execute_script(script)
                            #
                            # alert2 = WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            #
                            # if alert2.text == '인증번호가 올바르지 않습니다':
                            #     Alert(_driver).accept()  # 확인 버튼 클릭
                            #
                            #     script = (f"document.getElementById('check_number').value='{''}';")
                            #     _driver.execute_script(script)
                            #
                            #     # 텍스트 상자에 길이가 5이고 숫자인 값이 입력 될 때까지 대기합니다.
                            #     textbox = wait.until(EC.element_to_be_clickable((By.ID, 'check_number')))
                            #     wait.until(
                            #         lambda driver: len(
                            #             textbox.get_attribute('value').strip()) == 6)
                            #
                            #     script = (
                            #         "document.getElementsByClassName('btn btn-lg btn-success me-3')[0].click();")
                            #     _driver.execute_script(script)
                            #
                            #     alert3 = WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            #     if alert3.text == '인증번호가 올바르지 않습니다':
                            #         _driver.close()
                            #         _driver.switch_to.window(parent_window)
                            #     else:
                            #         Alert(_driver).accept()  # 확인 버튼 클릭
                            #
                            #         _driver.switch_to.window(parent_window)
                            #
                            #         script = ("document.getElementsByClassName('button action_write')[0].click();")
                            #         _driver.execute_script(script)
                            #
                            #         WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            #         Alert(_driver).accept()  # 확인 버튼 클릭
                            # else:
                            #     Alert(_driver).accept()  # 확인 버튼 클릭
                            #
                            #     _driver.switch_to.window(parent_window)
                            #
                            #     script = ("document.getElementsByClassName('button action_write')[0].click();")
                            #     _driver.execute_script(script)
                            #
                            #     WebDriverWait(_driver, 10).until(EC.alert_is_present())
                            #     Alert(_driver).accept()  # 확인 버튼 클릭
                    except:
                        _driver.switch_to.window(parent_window)
                else:
                    return
            except (
            UnexpectedAlertPresentException, NoSuchElementException, JavascriptException, WebDriverException, IndexError) as e:
                _driver.switch_to.window(parent_window)
                pass


def checkVerificationCode(_driver):
    time.sleep(3)
    isRes = False

    botToken = 'abcd'

    client = WebClient(token=botToken)

    try:
        count = 0
        isOk = False
        while not isOk:
            count += 1

            if count > 6:
                isOk = True

            response = client.conversations_history(channel="C055M10JWF8", limit=10)
            messages = response["messages"]
            mesText = messages[0]['text']

            try:
                verificationCode = mesText.split('\n')[5].strip()

                script = (f"document.getElementById('check_number').value='{verificationCode}';"
                         "document.getElementsByClassName('btn btn-lg btn-success me-3')[0].click();")

                _driver.execute_script(script)

                alert = WebDriverWait(_driver, 10).until(EC.alert_is_present())

                if alert.text == '인증번호가 올바르지 않습니다':
                    Alert(_driver).accept()  # 확인 버튼 클릭

                    script = (f"document.getElementById('check_number').value='{''}';")
                    _driver.execute_script(script)
                else:
                    isOk = True
                    isRes = True
            except IndexError:
                continue

        return isRes

    except SlackApiError as e2:
        print(e2)
        print('Error: {}'.format(e2.response['error']))


def getCheckBoxIds(rIsWeek, rCourtNum, rStartTime, rEndTime):
    checkBoxIds = []

    if str(rCourtNum) == '9' or str(rCourtNum) == '12' or str(rCourtNum) == '14' or str(rCourtNum) == '16' or str(rCourtNum) == '17' or str(rCourtNum) == '18':
        if rIsWeek:
            if str(rEndTime) == '22':
                if str(rStartTime) == '21':
                    checkBoxIds.append('checkbox_time_9')
                else:
                    for i in range(8, 10):
                        checkBoxIds.append('checkbox_time_' + str(i))
            else:
                for i in range(0, rEndTime - rStartTime):
                    checkBoxIds.append('checkbox_time_' + str(rStartTime - 6 + i))
        else:
            for i in range(rStartTime, rEndTime):
                checkBoxIds.append('checkbox_time_' + str(i - 6))
    else:
        if rIsWeek:
            if str(rEndTime) == '22':
                if str(rStartTime) == '21':
                    checkBoxIds.append('checkbox_time_6')
                else:
                    for i in range(5, 7):
                        checkBoxIds.append('checkbox_time_' + str(i))
            else:
                for i in range(0, rEndTime - rStartTime):
                    checkBoxIds.append('checkbox_time_' + str(rStartTime - 9 + i))
        else:
            for i in range(rStartTime, rEndTime):
                checkBoxIds.append('checkbox_time_' + str(i - 9))

    return checkBoxIds

def set_chrome_driver():
    chrome_options = webdriver.ChromeOptions()
    chrome_options.add_argument('headless')
    chrome_options.add_argument("disable-gpu")
    chrome_options.add_argument("disable-infobars")
    chrome_options.add_argument("--disable-extensions")

    # chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9222")
    # chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9223")
    chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9224")
    # chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9225")
    # chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9226")

    try:
        service = Service(ChromeDriverManager().install())
        driver = webdriver.Chrome(service=service, options=chrome_options)
    except Exception as e:
        print(e)
        driver = webdriver.Chrome(options=chrome_options)

    return driver

class RunMacro:
    def __init__(self, parent):
        subprocess.Popen(
            # r'C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9222 --user-data-dir="C:\chrometemp1"')  # 디버거 크롬 구동
            # r'C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9223 --user-data-dir="C:\chrometemp2"')  # 디버거 크롬 구동
            r'C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9224 --user-data-dir="C:\chrometemp3"')  # 디버거 크롬 구동
            # r'C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9225 --user-data-dir="C:\chrometemp4"')  # 디버거 크롬 구동
            # r'C:\Program Files\Google\Chrome\Application\chrome.exe --remote-debugging-port=9226 --user-data-dir="C:\chrometemp5"')  # 디버거 크롬 구동

        self.chromeDriver = set_chrome_driver()
        self.parent = parent
        self.isStart = False
        self.macroInfoList = None

    def moveToLoginPage(self):
        loginPagePath = 'https://www.ycs.or.kr/fmcs/133?referer=https%3A%2F%2Fwww.ycs.or.kr%2Ffmcs%2F1'
        self.chromeDriver.get(loginPagePath)

    def startMacro(self):
        self.isStart = True

        # 대표자
        teamName = self.parent.le_Team.text()
        # 참가 인원
        userCount = self.parent.cb_UsersCount.currentText()
        # 이용 목적
        purpose = self.parent.le_Purpose.text()
        # 이용 날짜
        usedDate = self.parent.usedDate
        # 시작 코트
        startCourt = self.parent.cb_StartCourt.currentText()
        # 종료 코트
        endCourt = self.parent.cb_EndCourt.currentText()
        # 시작 시간
        startTime = int(self.parent.cb_StartTime.currentText().split(':')[0])
        # 종료 시간
        endTime = int(self.parent.cb_EndTime.currentText().split(':')[0])

        # 주말 여부
        isWeek = self.parent.isWeek

        if isWeek:
            with open('macroDatasWeekEnd.csv', "r", encoding='utf-8-sig') as f:
                reader = csv.reader(f)
                macroInfoList = list(reader)
                self.macroInfoList = macroInfoList
        else:
            with open('macroDatasWeekDay.csv', "r", encoding='utf-8-sig') as f:
                reader = csv.reader(f)
                macroInfoList = list(reader)
                self.macroInfoList = macroInfoList

        try:
            urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

            t1 = threading.Thread(target=Worker123, args=(
                self, startCourt, endCourt, usedDate, startTime, endTime, teamName, userCount, purpose, isWeek))
            t1.daemon = True
            t1.start()
        except Exception as e:
            pass

    def stopMacro(self):
        self.parent.setLog("매크로 중지!")
        self.isStart = False

    def quitDriver(self):
        try:
            _driver = self.chromeDriver
            _driver.stop_client()
            _driver.quit()
        except Exception as e:
            print(e)
            pass

    def stopMacro(self):
        self.parent.setLog("매크로 중지!")
        self.isStart = False
